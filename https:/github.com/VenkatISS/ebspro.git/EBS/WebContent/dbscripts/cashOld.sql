CREATE TABLE AGENCY_CASH_DATA (
	ID BIGINT NOT NULL,
	INV_NO VARCHAR(30) NOT NULL,
	TRANS_TYPE INT(1) NOT NULL,
	T_DATE BIGINT NOT NULL,
	CASH_AMOUNT VARCHAR(10) NOT NULL,
	CASH_BALANCE DECIMAL(10,2) NOT NULL,
	CREATED_BY    	BIGINT(10) NULL,
	CREATED_DATE  	BIGINT NULL,
 	MODIFIED_BY   	BIGINT(10) NULL,
 	MODIFIED_DATE 	BIGINT NULL,
 	VERSION       	INT(1) NULL,
 	DELETED       	INT(1) NULL,
	CONSTRAINT AGENCY_CASH_DATA_PK PRIMARY KEY (ID)
);
ALTER TABLE AGENCY_CASH_DATA MODIFY COLUMN ID BIGINT(10) AUTO_INCREMENT;
ALTER TABLE AGENCY_CASH_DATA AUTO_INCREMENT=1000001;
ALTER TABLE AGENCY_CASH_DATA ADD COLUMN DISCOUNT VARCHAR(10) NULL;

SELECT * FROM AGENCY_CASH_DATA where CREATED_BY = 224224224;

SELECT * FROM AGENCY_CASH_DATA where CREATED_BY = 9999999999 order by ID desc;

CREATE TABLE CASH_TRANS_ENUM (
	ID INT(2) NOT NULL,
	TRANS_MODULE VARCHAR(25) NOT NULL,
	CONSTRAINT CASH_TRANS_ENUM_PK PRIMARY KEY (ID)
);

INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (1,'PAYMENTS');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (2,'RECEIPTS');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (3,'CASH DEPOSIT');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (4,'CASH WITHDRAWEL');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (5,'TV');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (6,'RC');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (7,'NCDBC');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (8,'SALE');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (9,'CASH REVERSAL');
INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (10,'CASH REVERSAL');

INSERT INTO CASH_TRANS_ENUM (ID, TRANS_MODULE) VALUES (11,'DELETED'); /* AFTER RUNNING SCHEDULER - FOR DELETED PRODUCTS */


/* RECEIPTS INSERT*/
delimiter |
CREATE  TRIGGER RECEIPTS_DATA_TRIG
    AFTER INSERT ON RECEIPTS_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_MODE = 1 && NEW.CREDITED_BANK = 1
   then
   SET @Y = NEW.RCP_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.RCP_DATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,2, NEW.RCP_DATE, NEW.RCP_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*PAYMENTS INSERT*/
delimiter |
CREATE  TRIGGER PAYMENTS_DATA_TRIG
    AFTER INSERT ON PAYMENTS_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_MODE = 1 && NEW.DEBITED_BANK = 1
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.PYMT_DATE order by ID desc limit 1) - NEW.PYMT_AMOUNT ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,1, NEW.PYMT_DATE, NEW.PYMT_AMOUNT,@X,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*BANK TRANSACTIONS  INSERT*/
delimiter |
CREATE TRIGGER BANK_TRANS_DATA_TRIG
    AFTER INSERT ON BANK_TRANS_DATA
    FOR EACH ROW
BEGIN
	
           if  NEW.TRANS_TYPE = 4
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.BT_DATE order by ID desc limit 1) + NEW.TRANS_AMOUNT ;
           INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,4, NEW.BT_DATE, NEW.TRANS_AMOUNT,@X,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);

   end if;
        if  NEW.TRANS_TYPE = 3
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.BT_DATE order by ID desc limit 1) - NEW.TRANS_AMOUNT ;
           INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,3, NEW.BT_DATE, NEW.TRANS_AMOUNT,@X,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
        end if;


END;
|
delimiter ;


/*DOM INSERT*/
delimiter |
CREATE  TRIGGER DOM_SALES_INVOICES_TRIG
    AFTER INSERT ON DOM_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y = NEW.CASH_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE and TRANS_TYPE != 11 order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,8, NEW.SI_DATE, NEW.CASH_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;


/*COM INSERT*/
delimiter |
CREATE  TRIGGER COM_SALES_INVOICES_TRIG
    AFTER INSERT ON COM_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y = NEW.SI_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,8, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*ARB INSERT*/
delimiter |
CREATE  TRIGGER ARB_SALES_INVOICES_TRIG
    AFTER INSERT ON ARB_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y = NEW.SI_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,8, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*NCDBC INSERT*/
delimiter |
CREATE  TRIGGER NCDBCRCTV_INVOICES_TRIG
    AFTER INSERT ON NCDBCRCTV_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.CASH_AMOUNT != 0 
   then
   SET @Y = NEW.CASH_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.INV_DATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,7, NEW.INV_DATE, NEW.CASH_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*RC INSERT*/
delimiter |
CREATE  TRIGGER RC_DATA_TRIG
    AFTER INSERT ON RC_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.RC_AMOUNT != 0 
   then
   SET @Y = NEW.RC_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.RC_DATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,6, NEW.RC_DATE, NEW.RC_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*TV INSERT*/
delimiter |
CREATE  TRIGGER TV_DATA_TRIG
    AFTER INSERT ON TV_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.TV_AMOUNT != 0 
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.TV_DATE order by ID desc limit 1)-NEW.TV_AMOUNT ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,5, NEW.TV_DATE, NEW.TV_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;


/*ASSETS MANAGEMENT INSERT*/
delimiter |
CREATE  TRIGGER ASSETS_DATA_TRIG
    AFTER INSERT ON ASSETS_DATA
    FOR EACH ROW
BEGIN
   if  NEW.ASSET_TTYPE = 2 && NEW.ASSET_MOP = 1 && NEW.BANK_ID = 0
   then
   SET @Y = NEW.ASSET_VALUE + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.ASSET_TDATE order by ID desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.ID,8, NEW.ASSET_TDATE, NEW.ASSET_VALUE,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;


/*DOM SALES UPDATE*/
/*
delimiter |
CREATE  TRIGGER DOM_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON DOM_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y =  (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.CASH_AMOUNT;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.CASH_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;
*/

/*SELECT TRANS_TYPE FROM AGENCY_CASH_DATA WHERE CREATED_BY = 9999999999 and INV_NO = "SI-18-0076";*/
delimiter |
CREATE  TRIGGER DOM_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON DOM_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   SET @C =  (SELECT COUNT(*) FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and INV_NO = NEW.SR_NO); 
   -- @C- For not inserting data in cash table when updating domsales in scheduler 
   -- after scheduler runs balance in domsales table will be updated.
   -- At the time of delete only one record will be there in cash table with that inv_no
   
   if  NEW.PAYMENT_TERMS = 1 && @C = 1
   then
   SET @Y =  (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.CASH_AMOUNT;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.CASH_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;


/*COM SALES UPDATE*/
delimiter |
CREATE  TRIGGER COM_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON COM_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.SI_AMOUNT;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*ARB SALES UPDATE*/
delimiter |
CREATE  TRIGGER ARB_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON ARB_SALES_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.PAYMENT_TERMS = 1 
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.SI_AMOUNT ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*NCDBC SALES UPDATE*/
delimiter |
CREATE  TRIGGER NCDBCRCTV_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON NCDBCRCTV_INVOICES
    FOR EACH ROW 
BEGIN
   if  NEW.CASH_AMOUNT != 0 
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.INV_DATE order by ID desc limit 1) - NEW.CASH_AMOUNT;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.INV_DATE, NEW.CASH_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*RC UPDATE*/
delimiter |
CREATE  TRIGGER RC_DATA_UPDATE_TRIG
    AFTER UPDATE ON RC_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.RC_AMOUNT != 0 
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.RC_DATE order by ID desc limit 1) - NEW.RC_AMOUNT;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.RC_DATE, NEW.RC_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*TV UPDATE
delimiter |
CREATE  TRIGGER TV_DATA_UPDATE_TRIG
    AFTER UPDATE ON TV_DATA
    FOR EACH ROW 
BEGIN
   if  NEW.TV_AMOUNT != 0 
   then
   SET @Y = NEW.TV_AMOUNT + (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.TV_DATE order by ID desc limit 1) ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,10, NEW.TV_DATE, NEW.TV_AMOUNT,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;
*/

/*ASSETS MANAGMENT INSERT*/
delimiter |
CREATE  TRIGGER ASSETS_DATA_UPDATE_TRIG
    AFTER UPDATE ON ASSETS_DATA
    FOR EACH ROW
BEGIN
   if  OLD.ASSET_TTYPE = 2 && OLD.ASSET_MOP = 1 && OLD.BANK_ID = 0
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.ASSET_TDATE order by ID desc limit 1) - NEW.ASSET_VALUE;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.ID,9, NEW.ASSET_TDATE, NEW.ASSET_VALUE,@Y,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*RECEIPTS UPDATE*/
delimiter |
CREATE  TRIGGER RECEIPTS_DATA_DELETE_TRIG
    BEFORE UPDATE ON RECEIPTS_DATA
    FOR EACH ROW 
BEGIN
   if  OLD.PAYMENT_MODE = 1 && OLD.CREDITED_BANK = 1
   then
   SET @Y =(SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = OLD.CREATED_BY and T_DATE <= OLD.RCP_DATE order by ID desc limit 1) -  OLD.RCP_AMOUNT ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(OLD.SR_NO,9, OLD.RCP_DATE, OLD.RCP_AMOUNT,@Y,OLD.CREATED_BY,OLD.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*PAYMENTS UPDATE*/
delimiter |
CREATE  TRIGGER PAYMENTS_DATA_DELETE_TRIG
    BEFORE UPDATE ON PAYMENTS_DATA
    FOR EACH ROW 
BEGIN
   if  OLD.PAYMENT_MODE = 1 && OLD.DEBITED_BANK = 1
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = OLD.CREATED_BY and T_DATE <= OLD.PYMT_DATE order by ID desc limit 1) + OLD.PYMT_AMOUNT ;
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(OLD.SR_NO,10, OLD.PYMT_DATE, OLD.PYMT_AMOUNT,@X,OLD.CREATED_BY,OLD.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*BANKTRANSACTIONS UPDATE*/
delimiter |
CREATE  TRIGGER BANK_TRANS_DATA_DELETE_TRIG
    BEFORE UPDATE ON BANK_TRANS_DATA
    FOR EACH ROW
BEGIN
   if  OLD.TRANS_TYPE = 4
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = OLD.CREATED_BY and T_DATE <= OLD.BT_DATE order by ID desc limit 1) - OLD.TRANS_AMOUNT ;
           INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(OLD.SR_NO,9, OLD.BT_DATE, OLD.TRANS_AMOUNT,@X,OLD.CREATED_BY,OLD.CREATED_DATE,0,0,1,0);

   end if;
   if  OLD.TRANS_TYPE = 3
   then
   SET @X = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = OLD.CREATED_BY and T_DATE <= OLD.BT_DATE order by ID desc limit 1) + OLD.TRANS_AMOUNT ;
           INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(OLD.SR_NO,10, OLD.BT_DATE, OLD.TRANS_AMOUNT,@X,OLD.CREATED_BY,OLD.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;
/-----------------------------Discount---------------------------/
 delimiter |
CREATE  TRIGGER NCDBCRCTV_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON NCDBCRCTV_INVOICES
    FOR EACH ROW
BEGIN
   if  NEW.CASH_AMOUNT != 0
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.INV_DATE order by ID desc limit 1) - NEW.CASH_AMOUNT;
   SET @Z=(SELECT DISCOUNT FROM AGENCY_CASH_DATA WHERE INV_NO=NEW.SR_NO  AND NEW.DELETED=2 order by NEW.MODIFIED_DATE desc limit 1);

   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,DISCOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.INV_DATE, NEW.CASH_AMOUNT,@Y,@Z,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;



/*DOM SALES UPDATE*/
delimiter |
CREATE  TRIGGER DOM_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON DOM_SALES_INVOICES
    FOR EACH ROW
BEGIN
   if  NEW.PAYMENT_TERMS = 1
   then
   SET @Y =  (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.CASH_AMOUNT;
   SET @Z=(SELECT DISCOUNT FROM AGENCY_CASH_DATA WHERE INV_NO=NEW.SR_NO  AND NEW.DELETED=2 order by NEW.MODIFIED_DATE desc limit 1);
   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,DISCOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.CASH_AMOUNT,@Y,@Z,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*COM SALES UPDATE*/
delimiter |
CREATE  TRIGGER COM_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON COM_SALES_INVOICES
    FOR EACH ROW
BEGIN
   if  NEW.PAYMENT_TERMS = 1
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.SI_AMOUNT;
   SET @Z=(SELECT DISCOUNT FROM AGENCY_CASH_DATA WHERE INV_NO=NEW.SR_NO  AND NEW.DELETED=2 order by NEW.MODIFIED_DATE desc limit 1);

   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,DISCOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,@Z,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;

/*ARB SALES UPDATE*/
delimiter |
CREATE  TRIGGER ARB_SALES_INVOICES_UPDATE_TRIG
    AFTER UPDATE ON ARB_SALES_INVOICES
    FOR EACH ROW
BEGIN
   if  NEW.PAYMENT_TERMS = 1
   then
   SET @Y = (SELECT CASH_BALANCE FROM AGENCY_CASH_DATA WHERE CREATED_BY = NEW.CREATED_BY and T_DATE <= NEW.SI_DATE order by ID desc limit 1) - NEW.SI_AMOUNT ;
   SET @Z=(SELECT DISCOUNT FROM AGENCY_CASH_DATA WHERE INV_NO=NEW.SR_NO  AND NEW.DELETED=2 order by NEW.MODIFIED_DATE desc limit 1);

   INSERT INTO AGENCY_CASH_DATA(INV_NO,TRANS_TYPE,T_DATE,CASH_AMOUNT,CASH_BALANCE,DISCOUNT,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,VERSION,DELETED) VALUES(NEW.SR_NO,9, NEW.SI_DATE, NEW.SI_AMOUNT,@Y,@Z,NEW.CREATED_BY,NEW.CREATED_DATE,0,0,1,0);
   end if;
END;
|
delimiter ;
